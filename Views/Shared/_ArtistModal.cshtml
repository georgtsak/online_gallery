@model ArtistModalModel

<div class="modal fade" id="artistModal-@Model.Artist.Id" tabindex="-1" aria-labelledby="artistModalLabel-@Model.Artist.Id" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 800px;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="d-flex align-items-center">
                    <img src="@Model.Artist.ProfileImgUrlOrDefault"
                         alt="Profile Image"
                         class="rounded-circle me-2"
                         style="width: 100px; height: 100px; object-fit: cover; border:1px solid #17a2b8; padding:3px; margin-right:5px;" />

                    <h5 class="modal-title m-0" id="artistModalLabel-@Model.Artist.Id">
                        @Model.Artist.FullName
                        @if (Model.Artist.IsDeleted)
                        {
                            <span class="text-danger small"><em> - Deleted user</em></span>
                        }
                    </h5>
                </div>

                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body" style="height: 410px; overflow-y: auto;">
                <p>
                    <strong>Email:</strong>
                    @if (Model.Artist.IsDeleted)
                    {
                        @MaskEmail(Model.Artist.Email)
                    }
                    else
                    {
                        @Model.Artist.Email
                    }
                </p>

                <h6>Artworks:</h6>

                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
                    @foreach (var art in Model.Artworks)
                    {
                        <div class="col">
                            <div class="card p-3 border-info mb-3">
                                <img src="@art.ImageUrl" class="card-img-top" alt="@art.Title" style="object-fit: cover; height: 130px; width:200px;" />
                                <div class="card-body">
                                    <h6 class="card-title text-truncate">
                                        @art.Title
                                        @if (art.Status == ArtworkStatus.Available)
                                        {
                                            <span title="Artwork available" class="d-inline ms-1" style="font-size:0.5rem; vertical-align: middle;">
                                                <i class="bi bi-circle-fill text-info"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span title="Artwork sold" class="d-inline ms-1" style="font-size:0.5rem; vertical-align: middle;">
                                                <i class="bi bi-circle-fill text-secondary"></i>
                                            </span>
                                        }
                                    </h6>
                                    
                                    <p class="card-text fw-bold">€@art.Price</p>
                                    <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#artworkModal-@art.Id">
                                        <i class="bi bi-eye"></i> View artwork
                                    </button>
                                </div>
                            </div>
                        </div>
                        @await Html.PartialAsync("_ArtworksModal", art)
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@functions {
    public string MaskEmail(string email)
    {
        if (string.IsNullOrWhiteSpace(email)) return "";

        var parts = email.Split('@');
        if (parts.Length != 2) return email;

        var local = parts[0];
        var domain = parts[1];

        string visiblePart = local.Length >= 2 ? local.Substring(0, 2) : local;
        return $"{visiblePart}***@{domain}";
    }
}
    
