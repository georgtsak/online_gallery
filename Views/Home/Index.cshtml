@model HomeModel

@{
    ViewData["Title"] = "Home Page";
}
@{
    Layout = "_Layout";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet"> <!-- icons -->
<link rel="stylesheet" href="~/css/home.css" />

<!-- ***************************************************** carousel ****** -->

<div class="row justify-content-center fullscreen align-items-center">
    <div class="col-lg-5 col-md-8 home-banner-left">
        <div id="textCarousel" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <h1 class="text-white">Text text 1</h1>
                    <p class="mx-auto text-white mt-20 mb-40">
                        text text text text text text text text text text text text text  text text text text text text text text text text
                    </p>
                </div>
                <div class="carousel-item">
                    <h1 class="text-white">Text text 2</h1>
                    <p class="mx-auto text-white mt-20 mb-40">
                        text text text text text text text text text text text text text  text text text text text text text text text text
                    </p>
                </div>
                <div class="carousel-item">
                    <h1 class="text-white">Text text 3</h1>
                    <p class="mx-auto text-white mt-20 mb-40">
                        text text text text text text text text text text text text text  text text text text text text text text text text
                    </p>
                </div>
            </div>
            <a class="carousel-control-prev" href="#textCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#textCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>

</div>

<!-- ***************************************** recommended artworks ****** -->

<div class="container mt-5">
    <h3 class="text-center text-secondary mb-2">Recommended for You</h3>

    <div class="row justify-content-center">
        @if (Model.RecommendedArtworks != null && Model.RecommendedArtworks.Any())
        {
            @foreach (var artwork in Model.RecommendedArtworks)
            {
                <div class="col-md-3 col-sm-6 mb-4">
                    <div class="card h-100 shadow-sm">

                        <img src="@artwork.ImageUrl"
                             class="card-img-top"
                             alt="@artwork.Title"
                             style="height: 200px; object-fit: cover; pointer-events: none;">

                        <div class="card-body d-flex flex-column text-center">
                            <h5 class="card-title">@artwork.Title</h5>
                            <p class="card-text text-muted">€@artwork.Price</p>

                            <button type="button"
                                    class="btn btn-outline-info mt-auto"
                                    data-bs-toggle="modal"
                                    data-bs-target="#artworkModal-@artwork.Id">
                                <i class="bi bi-eye"></i> View
                            </button>
                        </div>
                    </div>
                </div>

                @await Html.PartialAsync("_ArtworksModal", artwork)
            }
        }
        else
        {
            <p class="text-center text-muted">No recommendations yet. <br> Log in and make a purchase to get personalized suggestions.</p>
        }
    </div>
</div>

<!-- ************************************************** top artists ****** -->

<div class="py-5">
    <h3 class="text-center text-white mb-2">Top 5 Artists</h3>

    <div class="custom-card rounded-3 p-3 text-secondary mb-2" style="width: 100%;">
        <div class="container py-3">
            <div class="row justify-content-center">
                @foreach (var artist in Model.TopArtists)
                {
                    var artistModal = Model.ArtistProfile.FirstOrDefault(a => a.Artist.Id == artist.Artist.Id);
                    if (artistModal != null)
                    {
                        <div class="col-md-2 text-center mx-2 mb-0">
                            <a class="text-decoration-none text-reset artist-link" href="#" data-bs-toggle="modal" data-bs-target="#artistModal-@artist.Artist.Id">
                                <img title="press" src="@artist.Artist.ProfileImgUrlOrDefault"
                                     class="rounded-circle mb-2 border border-info"
                                     style="width: 170px; height: 170px; object-fit: cover; padding: 4px;" />
                                <h5>@artist.Artist.FullName</h5>
                            </a>

                            <p>Sales: @artist.SalesCount</p>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    @foreach(var artistProfile in Model.ArtistProfile)
    {
        @await Html.PartialAsync("_ArtistModal", artistProfile)
    }

</div>




<!-- ******************************* recent artworks of top artists ****** -->

<div class="container mt-5">
    <h3 class="text-center text-secondary mb-2">Recent Artworks by Top Artists</h3>

    <div class="position-relative">
        <div class="d-flex overflow-hidden" id="artworkSlider" style="scroll-behavior: smooth;">
            @foreach (var artwork in Model.RecentArtworks)
            {
                <div class="card m-2 flex-shrink-0" style="width: 250px;">
                    <img src="@artwork.ImageUrl" class="card-img-top" alt="@artwork.Title" style="height: 200px; object-fit: cover;pointer-events: none;">

                    <div class="card-body text-center" style="display: flex; flex-direction: column; justify-content: space-between; height: 140px;">
                        <h5 class="card-title">@artwork.Title</h5>
                        <p class="card-text text-muted">€@artwork.Price - @artwork.Artist.FullName </p>
                        <!--<button type="button" class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#artworkModal-@artwork.Id">
                         <i class="bi bi-eye"></i>
                        </button>-->
                    </div>

                </div>
                //@await Html.PartialAsync("_ArtworksModal", artwork)
            }
        </div>
    </div>
</div>

<script>
    const slider = document.getElementById('artworkSlider');
    const cardWidth = 250 + 16; // width + margin
    let autoScroll;
    let scrollStep = 3; // pixels per frame
    let scrollInterval = 16; // 60fps
    let cloned = false;

    // klwnopoihsh twn cards sto telos tou slider
    // gia na apofygoume to reverse animation
    window.addEventListener('DOMContentLoaded', () => {
        // apofugh klwnopoihshs an exei ginei hdh
        // gia na mhn uparksei uperfortwsh tou slider
        if (!cloned) {
            const cards = Array.from(slider.children);
            const visibleCardsCount = Math.floor(slider.offsetWidth / cardWidth);

            for (let i = 0; i < visibleCardsCount; i++) {
                const clone = cards[i].cloneNode(true);
                slider.appendChild(clone);
            }
            cloned = true;
        }
        startAutoScroll();
    });

    function scrollSlider() {
        slider.scrollLeft += scrollStep;

        // telos tou slider, start smoothly
        if (slider.scrollLeft >= slider.scrollWidth - slider.offsetWidth) {
            slider.style.scrollBehavior = 'auto';
            slider.scrollLeft = 0;
            slider.style.scrollBehavior = 'smooth';
        }
    }

    function startAutoScroll() {
        stopAutoScroll();
        autoScroll = setInterval(scrollSlider, scrollInterval);
    }

    function stopAutoScroll() {
        clearInterval(autoScroll);
    }

    // kanei pause sto hover
    slider.addEventListener('mouseenter', stopAutoScroll);
    slider.addEventListener('mouseleave', startAutoScroll);
</script>

<script src="js/owl.carousel.min.js"></script>
<link rel="stylesheet" href="css/carousel.css" />


