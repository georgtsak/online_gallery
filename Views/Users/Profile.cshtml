@using Microsoft.AspNetCore.Html
@model ProfileModel

<link rel="stylesheet" href="~/css/profile.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet"> <!-- icons -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<!-- ****************************************************** buttons ****** -->

<div class="text-center mb-4" style="padding-top:60px;">
    <button class="btn btn-dark me-2 active" id="artworks_button" onclick="showSection('artworks')">Artworks</button>
    <button class="btn btn-dark me-2" id="purchases_button" onclick="showSection('purchases')">Purchases</button>
    <button class="btn btn-dark me-2" id="sales_button" onclick="showSection('sales')">Sales</button>
    <button class="btn btn-dark" id="account_button" onclick="showSection('account')">Account</button>
</div>

<!-- ********************************************* artworks section ****** -->
@{
    var user_id = Context.Session.GetInt32("UserId") ?? 0;
}
<div id="artworks_section">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h3>@Model.User.FullName's Artworks</h3>
        <button class="btn btn-outline-secondary" id="toggle_layout" onclick="toggleLayout()">Switch Layout</button>
    </div>
    @if (Model.Artworks.Any())
    {
        <div id="artworks_container" class="row">
            @foreach (var artwork in Model.Artworks)
            {
                var owner = artwork.ArtistId == user_id;
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <img src="@artwork.ImageUrl" class="card-img-top" alt="@artwork.Title" />
                        <div class="card-body">
                            <h5 class="card-title">@artwork.Title</h5>
                            <p class="card-text">@artwork.Description</p>

                            <div class="d-flex justify-content-between align-items-center">
                                <p class="text-muted mb-0">€@artwork.Price</p>
                                <div>
                                    @if (artwork.Status == ArtworkStatus.Available)
                                    {
                                        <span title="Artwork available">
                                            <i class="bi bi-circle-fill text-info ms-1" style="font-size:0.5rem; vertical-align: middle;"></i>
                                        </span>
                                    }
                                    else
                                    {
                                        <span title="Artwork sold">
                                            <i class="bi bi-circle-fill text-secondary ms-1" style="font-size:0.5rem; vertical-align: middle;"></i>
                                        </span>
                                    }

                                    <button type="button" class="btn btn-sm btn-outline-info" title="View artwork details" data-bs-toggle="modal" data-bs-target="#artworkModal-@artwork.Id">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    @await Html.PartialAsync("_ArtworksModal", artwork)

                                    @if (owner)
                                    {
                                        
                                        if (artwork.Status == ArtworkStatus.Available)
                                        {
                                            <a asp-controller="Artworks" asp-action="Edit" asp-route-id="@artwork.Id" class="btn btn-sm btn-outline-secondary" title="Edit artwork">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>

                                            <button type="button" class="btn btn-sm btn-outline-danger" title="Delete artwork"
                                                    data-bs-toggle="modal" data-bs-target="#deleteModal-@artwork.Id">
                                                <i class="bi bi-trash3"></i>
                                            </button>
                                            @Html.Partial("~/Views/Artworks/_DeleteModal.cshtml", artwork)

                                        }
                                        else
                                        {
                                            <button class="btn btn-sm btn-outline-secondary disabled" title="Cannot edit, artwork is sold">
                                                <i class="bi bi-pencil-square"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger disabled" title="Cannot delete, artwork is sold">
                                                <i class="bi bi-trash3"></i>
                                            </button>
                                        }
                                    }
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>You have not uploaded any artworks yet.</p>
    }
</div>

<!-- ******************************************** purchases section ****** -->

<div id="purchases_section" style="display:none;">
    <h3>My Purchases</h3>
    @{
        var modals = new List<IHtmlContent>();
    }
    @if (Model.Purchases.Any())
    {
        

        <ul class="list-group">
            @foreach (var t in Model.Purchases)
            {
                bool available = t.Artwork.Status == ArtworkStatus.Available;
                
                var artist = t.Artwork.Artist;
                var artistArtworks = Model.AllArtworks.Where(a => a.ArtistId == artist.Id).ToList();
                var modalModel = new ArtistModalModel
                {
                    Artist = artist,
                    Artworks = artistArtworks
                };
                modals.Add(await Html.PartialAsync("_ArtistModal", modalModel));

                
                <li class="list-group-item d-flex align-items-center justify-content-between"
                    style="padding:10px;margin-bottom:10px; border: 2px solid rgba(52, 58, 64,0.8);">

                    <div>
                        <h5 class="mb-1">@t.Artwork.Title</h5>
                        <small class="text-muted">€@t.Price on @t.PurchasedAt</small>
                        <small class="text-muted">Artist: @t.Artwork.Artist?.FullName @*(@t.Artwork.Artist?.Email)*@</small><br />
                        <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#artistModal-@artist.Id">
                            <i class="bi bi-eye"></i>
                        </button>

                    </div>

                    <div class="d-flex justify-content-center flex-grow-1">
                        @if (t.Status == TransactionStatus.Pending)
                        {

                            if (available)
                            {
                                <form asp-controller="Transaction" asp-action="Pay" method="post" style="padding-right:5px;">
                                    <input type="hidden" name="transactionId" value="@t.Id" />
                                    <button type="submit" class="btn btn-outline-primary btn-sm">
                                        Pay Now <i class="bi bi-credit-card-2-back"></i>
                                    </button>
                                </form>
                                <form asp-controller="Transaction" asp-action="Cancel" method="post">
                                    <input type="hidden" name="transactionId" value="@t.Id" />
                                    <button type="submit" class="btn btn-outline-danger btn-sm">
                                        Cancel <i class="bi bi-x-lg"></i>
                                    </button>
                                </form>
                            }
                            else
                            {
                                <button class="btn btn-outline-secondary btn-sm" disabled>
                                    No longer available
                                </button>
                            }

                        }
                        else if (t.Status == TransactionStatus.Completed)
                        {
                            <button type="submit" class="btn btn-outline-info btn-sm">
                                Download <i class="bi bi-download"></i>
                            </button>
                        }
                    </div>

                    <div class="text-end" style="min-width: 100px;">
                        @if (t.Status == TransactionStatus.Pending)
                        {
                            if (available)
                            {
                                <span class="badge bg-warning text-dark fixed-badge">Pending... </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary text-dark fixed-badge">Pending... </span>
                            }
                        }
                        else if (t.Status == TransactionStatus.Completed)
                        {
                            <span class="badge bg-success fixed-badge">Completed</span>
                        }
                        else if (t.Status == TransactionStatus.Cancelled)
                        {
                            <span class="badge bg-danger fixed-badge">Cancelled</span>
                        }
                    </div>
                </li>
            }
        </ul>

    }
    else
    {
        <p>You have not made any purchases yet.</p>
    }

</div>

@foreach (var modal in modals)
{
    @modal
}

<!-- ************************************************ sales section ****** -->

@{
    var salesGrouped = Model.Sales
        .GroupBy(s => s.PurchasedAt.ToString("yyyy-MM"))
        .OrderBy(g => g.Key);

    var monthLabels = salesGrouped
        .Select(g => DateTime.Parse(g.Key + "-01").ToString("MMM yyyy", System.Globalization.CultureInfo.InvariantCulture))
        .ToList();

    var sales_count1 = salesGrouped.Select(g => g.Count()).ToList();
    var sales_sum1 = salesGrouped.Select(g => g.Sum(s => s.Price)).ToList();

    var month_label = string.Join(",", monthLabels.Select(m => $"'{m}'"));
    var sales_count = string.Join(",", sales_count1);
    var sales_sum = string.Join(",", sales_sum1);
}

<div class="row" id="sales_section" style="display:none;">
    <div class="col-md-8">
        <h3>My Sales</h3>
        @if (Model.Sales.Any())
        {
            <div id="artworks_container" class="list-view">
                @foreach (var s in Model.Sales)
                {
                    <div class="col-md-2">
                        <div class="card">
                            <img src="@s.Artwork.ImageUrl" class="card-img-top" alt="@s.Artwork.Title" />
                            <div class="card-body d-flex justify-content-left">
                                <div>
                                    <h5 class="card-title mb-1">@s.Artwork.Title</h5>
                                    <p class="card-text mb-0">
                                        €@s.Price
                                        <small class="text-muted">on @s.PurchasedAt.ToString("dd/MM/yyyy")</small>
                                    </p>
                                </div>
                                @if (s.Artwork.Status == ArtworkStatus.Sold)
                                {
                                    <span class="badge bg-success text-dark">Sold</span>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-md-6" style="padding:20px;">
                    <div class="card" style="padding:15px;"><canvas id="sales_count_chart"></canvas></div>
                </div>

                <div class="col-md-6" style="padding:20px;">
                    <div class="card" style="padding:15px;"><canvas id="sales_sum_chart"></canvas></div>
                </div>
            </div>
        }
        else
        {
            <p>You have not sold any artworks yet.</p>
        }
    </div>

</div>
<!-- ********************************************** account section ****** -->

<div id="account_section" style="display:none;">
    <h3>My Account Info</h3>
    <div class="row">

        <!-- **************************************************** user info ****** -->

        <div class="col-md-8">
            <div class="card card1">

                <li class="card-header list-group-item d-flex justify-content-between align-items-center">
                    <span class="d-flex align-items-center">
                        <img src="@Model.User.ProfileImgUrlOrDefault"
                             class="rounded-circle"
                             style="width: 100px; height: 100px; object-fit: cover; border:1px solid #17a2b8; padding:3px; margin-right: 10px;" />

                        <form id="changeProfileForm" asp-controller="Users" asp-action="ChangeProfileImg" method="post" enctype="multipart/form-data" class="d-flex align-items-center">
                            @Html.AntiForgeryToken()

                            <label for="profileImageInput" class="btn btn-outline-dark btn-sm mb-0" style="display: none;" id="chooseImageBtn">Choose Image...</label>
                            <input type="file" name="profileImage" id="profileImageInput" accept="image/*" style="display: none;" />
                            <span id="fileNamePreview" class="mx-2" style="display: none; font-size: 0.9em; color: #555;"></span>
                            <button type="submit" id="saveProfileBtn" class="btn btn-outline-info btn-sm mx-1" style="display: none;">Save</button>
                            <button type="button" id="cancel_profile_btn" class="btn btn-outline-secondary btn-sm" style="display: none;">Cancel</button>
                        </form>
                    </span>

                    <div>
                        <button id="edit_profile_img_btn" class="btn btn-outline-secondary btn-sm">Change Profile Image <i class="bi bi-pencil-square"></i></button>
                    </div>
                </li>

                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><strong>Email:</strong> @Model.User.Email</li>

                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span class="d-flex align-items-center">
                            <strong>Full Name:</strong>
                            <span id="fullNameText" class="mx-2">@Model.User.FullName</span>

                            <form id="editFullNameForm" method="post" asp-action="EditFullName" class="d-flex align-items-center">
                                @Html.AntiForgeryToken()
                                <input type="text" id="fullNameInput" name="FullName" class="form-control form-control-sm mx-2" value="@Model.User.FullName" style="display: none;" />
                                <button type="submit" id="saveBtn" class="btn btn-outline-info btn-sm" style="display: none;">Save Changes</button>
                                <button type="button" id="cancelBtn" class="btn btn-outline-secondary btn-sm mx-2" style="display: none;">Cancel</button>
                            </form>
                        </span>
                        <div>
                            <button id="editBtn" class="btn btn-outline-secondary btn-sm">Edit <i class="bi bi-pencil-square"></i></button>
                        </div>
                    </li>



                    <li class="list-group-item"><strong>Role:</strong> @Model.User.Role</li>
                </ul>
            </div>
        </div>

        <!-- ****************************************************** actions ****** -->

        <div class="col-md-4">
            <div class="card card1">
                <div class="card-header">Actions</div>
                <div class="card-body">

                    <!-- ********************************************** default buttons ****** -->

                    <div id="default_actions" class="pad_top1 @(TempData["DeleteError"] != null || TempData["PassChangeError"] != null || TempData["ConfirmDelete"] != null ? "d-none" : "")">
                        <button class="btn btn-outline-info w-100 mb-2" id="change_password_btn">Change Password</button>
                        <button class="btn btn-outline-danger w-100" id="delete_account_btn">Delete Account</button>
                    </div>

                    <!-- ********************************************* initially hidden ****** -->

                    <div id="password_change_section" class="@(TempData["PassChangeError"] != null ? "" : "d-none")">
                        <p class="text-muted mb-2">Change your password</p>

                        @if (TempData["PassChangeError"] != null)
                        {
                            <div class="text-info mb-2 small">@TempData["PassChangeError"]</div>
                        }

                        <form asp-controller="Users" asp-action="ChangePassword" method="post">
                            <input type="password" class="form-control form-control-sm mb-2"
                                   style="border:1px solid #17a2b8" maxlength="20"
                                   name="CurrentPassword" placeholder="Current Password" required />

                            <input type="password" class="form-control form-control-sm mb-2"
                                   style="border:1px solid #17a2b8"
                                   name="NewPassword" placeholder="New Password" required minlength="8" maxlength="20" pattern=".{8,20}" title="The password must be between 8 and 20 characters long." />


                            <div class="d-flex justify-content-between">
                                <button type="button" class="btn btn-secondary btn-sm" id="cancel_btn">Cancel</button>
                                <button type="submit" class="btn btn-info btn-sm" id="confirm_btn">Save changes</button>
                            </div>
                        </form>
                    </div>


                    <div id="delete_account_section" class="@((TempData["DeleteError"] != null || TempData["ConfirmDelete"] != null) ? "" : "d-none")">

                        @if (TempData["ConfirmDelete"] != null)
                        {
                            <p class="text-muted mb-2">Are you sure you want to delete your account permanently?</p>
                            <p class="text-muted mb-2 small">This action cannot be undone.</p>
                            <form asp-controller="Users" asp-action="DeleteAccountConfirmed" method="post">
                                <div class="d-flex justify-content-between">
                                    <a href="@Url.Action("ClearMessages", "Users")" class="btn btn-secondary btn-sm">Cancel</a>
                                    <button type="submit" class="btn btn-danger btn-sm">Yes, I'm sure</button>

                                </div>
                            </form>
                        }
                        else
                        {
                            <p class="text-muted mb-2">Please confirm your password to delete your account.</p>
                            <form asp-controller="Users" asp-action="DeleteAccount" method="post" id="delete_form">
                                @if (TempData["DeleteError"] != null)
                                {
                                    <div class="text-danger mb-2 small">@TempData["DeleteError"]</div>
                                }
                                <input type="password" class="form-control form-control-sm mb-2"
                                       name="Password" placeholder="Current Password" style="border:1px solid #dc3545;" required />

                                <div class="d-flex justify-content-between">
                                    <button type="button" class="btn btn-secondary btn-sm" id="cancel_delete_btn">Cancel</button>
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </div>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>

<!-- ******************************************************** alert ****** -->

@if (TempData["InfoMsg"] != null)
{
    <div class="alert alert-dark alert-dismissible fade show alert-custom" role="alert" id="tempAlert">
        <div class="vertical-line"></div>
        <i class="bi bi-info-circle"></i>
        @TempData["InfoMsg"]
    </div>
}

<!-- *********************************************************** js ****** -->

<script>

    function showSection(section) {
        ['artworks', 'purchases', 'sales', 'account'].forEach(sec => {
            document.getElementById(sec + '_section').style.display = 'none';
            document.getElementById(sec + '_button').classList.remove('active');
        });
        document.getElementById(section + '_section').style.display = 'block';
        document.getElementById(section + '_button').classList.add('active');
    }


    function toggleLayout() {
        const container = document.getElementById('artworks_container');
        container.classList.toggle('list-view');
    }

    document.addEventListener('DOMContentLoaded', function () {
        // active section --> apo to viewdata ston controller
        var activeSection = '@ViewData["ActiveSection"]';
        showSection(activeSection);
    });

    // ********************************************** account actions ****** //

    document.addEventListener("DOMContentLoaded", function () {
        const change_password_btn = document.getElementById("change_password_btn");
        const default_actions = document.getElementById("default_actions");
        const password_section = document.getElementById("password_change_section");
        const cancel_btn = document.getElementById("cancel_btn");

        change_password_btn.addEventListener("click", function (e) {
            e.preventDefault();
            default_actions.classList.add("d-none");
            password_section.classList.remove("d-none");
        });

        cancel_btn.addEventListener("click", function (e) {
            e.preventDefault();
            password_section.classList.add("d-none");
            default_actions.classList.remove("d-none");
        });
        cancel_btn.addEventListener("click", function (e) {
            e.preventDefault();
            window.location.href = "/Users/ClearMessages";
        });


        // *********************************************** delete account ****** //

        const deleteAccountBtn = document.getElementById("delete_account_btn");
        const deleteSection = document.getElementById("delete_account_section");
        const cancelDeleteBtn = document.getElementById("cancel_delete_btn");

        deleteAccountBtn.addEventListener("click", function (e) {
            e.preventDefault();
            default_actions.classList.add("d-none");
            deleteSection.classList.remove("d-none");
        });

        cancelDeleteBtn.addEventListener("click", function (e) {
            e.preventDefault();
            deleteSection.classList.add("d-none");
            default_actions.classList.remove("d-none");
        });
    });

    // *********************************************** clear messages ****** //

    document.getElementById("cancel_delete_btn")?.addEventListener("click", function () {
        window.location.href = "/Users/ClearMessages";
    });

    // ************************************************ edit fullname ****** //

    const editBtn = document.getElementById("editBtn");
    const cancelBtn = document.getElementById("cancelBtn");
    const fullNameText = document.getElementById("fullNameText");
    const fullNameInput = document.getElementById("fullNameInput");
    const saveBtn = document.getElementById("saveBtn");

    editBtn.addEventListener("click", function () {
        fullNameText.style.display = "none";
        fullNameInput.style.display = "inline-block";
        saveBtn.style.display = "inline-block";
        cancelBtn.style.display = "inline-block";
        editBtn.style.display = "none";
    });

    cancelBtn.addEventListener("click", function () {
        fullNameText.style.display = "inline";
        fullNameInput.style.display = "none";
        saveBtn.style.display = "none";
        cancelBtn.style.display = "none";
        editBtn.style.display = "inline-block";
    });

    // ***************************************** change profile image ****** //

    const edit_profile_img_btn = document.getElementById("edit_profile_img_btn");
    const cancel_profile_btn = document.getElementById("cancel_profile_btn");
    const profileImageInput = document.getElementById("profileImageInput");
    const saveProfileBtn = document.getElementById("saveProfileBtn");
    const chooseImageBtn = document.getElementById("chooseImageBtn");
    const fileNamePreview = document.getElementById("fileNamePreview");

    edit_profile_img_btn.addEventListener("click", function () {
        chooseImageBtn.style.display = "inline-block";
        saveProfileBtn.style.display = "inline-block";
        cancel_profile_btn.style.display = "inline-block";
        edit_profile_img_btn.style.display = "none";
    });

    cancel_profile_btn.addEventListener("click", function () {
        profileImageInput.value = "";
        fileNamePreview.style.display = "none";
        fileNamePreview.textContent = "";
        chooseImageBtn.style.display = "none";
        saveProfileBtn.style.display = "none";
        cancel_profile_btn.style.display = "none";
        edit_profile_img_btn.style.display = "inline-block";
    });

    profileImageInput.addEventListener("change", function () {
        const fileName = profileImageInput.files.length > 0 ? profileImageInput.files[0].name : "";
        if (fileName) {
            fileNamePreview.textContent = fileName;
            fileNamePreview.style.display = "inline-block";
        } else {
            fileNamePreview.textContent = "";
            fileNamePreview.style.display = "none";
        }
    });

    // *************************************** spinner - uploading... ****** //

    const changeProfileForm = document.getElementById("changeProfileForm");

    changeProfileForm.addEventListener("submit", function () {
        saveProfileBtn.disabled = true;
        saveProfileBtn.innerHTML = `
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Uploading...
        `;
    });

    // *********************************** restrict unsafe characters ****** //

    document.getElementById('editFullNameForm').addEventListener('submit', function (event) {
        var fullNameInput = document.getElementById('fullNameInput').value;
        var regex = /^[A-Za-zΑ-Ωα-ωΆ-Ώά-ώ0-9\s]+$/;

        if (!regex.test(fullNameInput)) {
            event.preventDefault();
            alert("Full name can only contain letters, numbers and spaces.");
        }
    });

    // ************************************************ alert timeout ****** //

    setTimeout(function () {
        var alert = document.getElementById('tempAlert');
        if (alert) {
            alert.classList.remove('show');
            setTimeout(function () {
                alert.remove();
            }, 200);
        }
    }, 5000);

    // ******************************************************* charts ****** //

    document.addEventListener("DOMContentLoaded", function () {
        const labels = [@Html.Raw(month_label)];
        const count1 = [@Html.Raw(sales_count)];
        const sum1 = [@Html.Raw(sales_sum)];

        const colors = [
            '#17a2b8', '#0b505b', '#49d3e9'
        ];

        // sales
        new Chart(document.getElementById('sales_count_chart'), {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Number of Sales',
                    data: count1,
                    backgroundColor: colors,
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'right' },
                    title: { display: true, text: 'Number of Sales per Month' }
                }
            }
        });

        // sales sum
        new Chart(document.getElementById('sales_sum_chart'), {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Sales Amount (€)',
                    data: sum1,
                    backgroundColor: colors,
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'right' },
                    title: { display: true, text: 'Monthly Sales Amount' }
                }
            }
        });
    });

</script>